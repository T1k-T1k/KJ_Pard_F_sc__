local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local runService = game:GetService("RunService")
local tweenService = game:GetService("TweenService")
local autoFarmEnabled = false
local debounce = false
local waitingPosition = Vector3.new(500, 500, 500)
local waitTime = 0.15  -- Задержка перед опусканием после подъёма
local depthOffset = 45 -- Глубина ниже карты, на которой летает персонаж
local returnPosition = humanoidRootPart.Position
local playerName = game.Players.LocalPlayer.Name -- Получаем имя игрока, который запустил скрипт
local playerModel = game.Workspace:FindFirstChild(playerName) -- Ищем модель игрока в workspace
local timerDuration = 4  -- Длительность таймера
local standDuration = 12   -- Время стояния на парте

if game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue() > 100 then
    wait(1)  -- Увеличиваем задержку при высоком пинге
end

local function safeWait(duration)
    -- Используем task.wait() вместо wait() для улучшенной производительности
    local success, err = pcall(function()
        task.wait(duration)
    end)
    if not success then
        warn("Ошибка ожидания: ", err)
    end
end

-- Проверка на существование SalePart
local salePart = workspace:FindFirstChild("SalePart")
if not salePart then
    -- Если SalePart не найден, создаем его
    salePart = Instance.new("Part")
    salePart.Name = "SalePart"
    salePart.Size = Vector3.new(6, 1, 6)
    salePart.Position = Vector3.new(250.5, -23, 345)
    salePart.Color = Color3.new(1, 1, 1)  -- Белый цвет
    salePart.Anchored = true
    salePart.Parent = workspace
end

-- Если модель игрока найдена
if playerModel then
    -- Ищем скрипт FallDamage внутри модели игрока в workspace
    local fallDamageScriptInModel = playerModel:FindFirstChild("FallDamage")

    -- Если скрипт найден, удаляем его
    if fallDamageScriptInModel then
        fallDamageScriptInModel:Destroy()
        print("Скрипт 'FallDamage' был удален из модели игрока в workspace.")
    else
        print("Скрипт 'FallDamage' не найден в модели игрока в workspace.")
    end
else
    print("Модель игрока с именем " .. playerName .. " не найдена в Workspace.")
end

-- Ищем скрипт FallDamage в StarterPlayer > StarterCharacterScripts
local fallDamageScriptInStarterCharacter = game.StarterPlayer.StarterCharacterScripts:FindFirstChild("FallDamage")
-- Если скрипт найден, удаляем его
if fallDamageScriptInStarterCharacter then
    fallDamageScriptInStarterCharacter:Destroy()
    print("Скрипт 'FallDamage' был удален из StarterPlayer > StarterCharacterScripts.")
else
    print("Скрипт 'FallDamage' не найден в StarterPlayer > StarterCharacterScripts.")
end

-- Удаление Killbrick при запуске
local scriptedFolder = workspace:FindFirstChild("Scripted")
if scriptedFolder then
    local killbrickFolder = scriptedFolder:FindFirstChild("Killbrick")
    if killbrickFolder then
        killbrickFolder:Destroy()
        print("Killbrick folder deleted.")
    end
end

-- Функция создания платформы FallProtector
local function createFallProtector()
    local existingPlatform = workspace:FindFirstChild("FallProtector")
    if not existingPlatform then
        local platform = Instance.new("Part")
        platform.Name = "FallProtector"
        platform.Size = Vector3.new(5000, 100, 5000)
        platform.Position = Vector3.new(0, -103, 0)
        platform.Anchored = true
        platform.CanCollide = true
        platform.Color = Color3.fromRGB(255, 255, 255)  -- Белый цвет
        platform.Parent = workspace
        print("FallProtector platform created.")
    end
end

-- Вызов функции создания платформы FallProtector при запуске скрипта
createFallProtector()

-- GUI create
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))

-- upper panel
local topFrame = Instance.new("Frame", screenGui)
topFrame.Size = UDim2.new(0, 300, 0, 30)
topFrame.Position = UDim2.new(0.1, 0, 0.1, 0)
topFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
topFrame.BorderSizePixel = 0
topFrame.Draggable = true
topFrame.Active = true

-- text and a button to minimization
local title = Instance.new("TextLabel", topFrame)
title.Size = UDim2.new(1, -35, 1, 0)
title.Text = "Auto Farm Pumpkins"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1
title.TextScaled = true

local minimizeButton = Instance.new("TextButton", topFrame)
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -30, 0, 0)
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.BackgroundTransparency = 1

-- toggle
local sliderFrame = Instance.new("Frame", topFrame)
sliderFrame.Size = UDim2.new(1, 0, 0, 70)
sliderFrame.Position = UDim2.new(0, 0, 1, 0)
sliderFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
sliderFrame.BorderSizePixel = 0

local toggleFrame = Instance.new("Frame", sliderFrame)
toggleFrame.Size = UDim2.new(0.6, 0, 0.4, 0)
toggleFrame.Position = UDim2.new(0.2, 0, 0.3, 0)
toggleFrame.BackgroundColor3 = Color3.fromRGB(150, 50, 50)
toggleFrame.BorderSizePixel = 0
toggleFrame.ClipsDescendants = true

local toggleButton = Instance.new("Frame", toggleFrame)
toggleButton.Size = UDim2.new(0.4, 0, 1, 0)
toggleButton.Position = UDim2.new(0, 0, 0, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(200, 100, 100)
local buttonCorner = Instance.new("UICorner", toggleButton)
buttonCorner.CornerRadius = UDim.new(1, 0)

local toggleCorner = Instance.new("UICorner", toggleFrame)
toggleCorner.CornerRadius = UDim.new(0, 20)

-- minimization animation
local isMinimized = false
minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    local newSize = isMinimized and UDim2.new(1, 0, 0, 0) or UDim2.new(1, 0, 0, 70)
    local tween = tweenService:Create(sliderFrame, TweenInfo.new(0.5), {Size = newSize})
    tween:Play()
end)

local function toggleAutoFarm()
    if debounce then return end
    debounce = true

    autoFarmEnabled = not autoFarmEnabled

    -- Анимация ползунка с проверкой
    local targetPosition = autoFarmEnabled and UDim2.new(0.6, 0, 0, 0) or UDim2.new(0, 0, 0, 0)
    local tween = tweenService:Create(toggleButton, TweenInfo.new(0.5), {Position = targetPosition})
    tween:Play()

    print("AutoFarm State Changed:", autoFarmEnabled) -- Проверка состояния автофарма

if autoFarmEnabled then
    spawn(function()
        while autoFarmEnabled do
            wait(0.1)
            local terrain = workspace:FindFirstChild("Terrain")
            local pumpkins = {}
            
            -- Поиск тыкв
            if terrain then
                for _, obj in pairs(terrain:GetChildren()) do
                    if obj:IsA("Model") and obj.Name == "Pumpkin" then
                        table.insert(pumpkins, obj)
                    end
                end
            end
            
            -- Проверяем наличие тыкв
            if #pumpkins > 0 then
                safeWait(0.3)
                -- Собираем тыквы
                for _, pumpkin in pairs(pumpkins) do
                    local primaryPart = pumpkin.PrimaryPart or pumpkin:FindFirstChildWhichIsA("BasePart")
                    if primaryPart then
                        local targetPosition = primaryPart.Position
                        local belowPosition = targetPosition - Vector3.new(0, depthOffset, 0)
                        safeWait(0.1)

                        -- Перемещение под тыкву
                        local moveToBelowTween = tweenService:Create(humanoidRootPart, TweenInfo.new(1.25), {CFrame = CFrame.new(belowPosition)})
                        moveToBelowTween:Play()
                        moveToBelowTween.Completed:Wait()
                        safeWait(0.3)

                        -- Подъём к тыкве
                        local riseTween = tweenService:Create(humanoidRootPart, TweenInfo.new(0.4), {CFrame = CFrame.new(targetPosition)})
                        riseTween:Play()
                        riseTween.Completed:Wait()
                        safeWait(0.1)

                        wait(waitTime)

                        -- Спуск обратно на глубину
                        local descendTween = tweenService:Create(humanoidRootPart, TweenInfo.new(0.4), {CFrame = CFrame.new(belowPosition)})
                        descendTween:Play()
                        descendTween.Completed:Wait()
                        safeWait(0.2)

                        wait(0.3)
                    else
                        print("No valid part found for pumpkin.")
                    end
                end
            else
                -- Если тыквы не найдены
                print("No pumpkins found. Starting timer...")
                
                -- Запуск таймера на 35 секунд
                wait(timerDuration)
                
                -- Определяем левую часть парта (сдвигаем на половину размера по X)
                local leftPosition = salePart.Position - Vector3.new(salePart.Size.X / 2, 0, 0)
                
                -- Перемещение персонажа к левой части SalePart
                local moveToSaleTween = tweenService:Create(humanoidRootPart, TweenInfo.new(1.5), {CFrame = CFrame.new(leftPosition)})
                moveToSaleTween:Play()
                moveToSaleTween.Completed:Wait()
                
                -- Ожидание на парте
                wait(standDuration)
                
                print("Returning to pumpkin farming...")
            end
        end
    end)
    safeWait(1.5) 
end
    debounce = false
end

-- Исправление нажатия на ползунок
toggleFrame.InputBegan:Connect(function(input)
if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
    print("Toggle clicked")  -- Проверка нажатия на ползунок
    toggleAutoFarm()
    end
end)

-- Проверка готовности персонажа
if humanoidRootPart then
    print("HumanoidRootPart found:", humanoidRootPart)
else
    warn("HumanoidRootPart not found!")
end

