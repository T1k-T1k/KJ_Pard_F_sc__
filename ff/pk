local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local runService = game:GetService("RunService")
local tweenService = game:GetService("TweenService")
local autoFarmEnabled = false
local debounce = false
local waitTime = 0.15  -- Delay before descending after ascending
local depthOffset = 42.5 -- Depth below the map where the character hovers
local playerName = game.Players.LocalPlayer.Name -- Get the name of the player who started the script
local playerModel = game.Workspace:FindFirstChild(playerName) -- Search for the player's model in workspace
local timerDuration = 4  -- Timer duration
local standDuration = 12   -- Time spent standing on the SalePart

-- Check if SalePart exists
local salePart = workspace:FindFirstChild("SalePart")
if not salePart then
    -- If SalePart is not found, create it
    salePart = Instance.new("Part")
    salePart.Name = "SalePart"
    salePart.Size = Vector3.new(6, 1, 6)
    salePart.Position = Vector3.new(250.5, -23, 345)
    salePart.Color = Color3.new(1, 1, 1)  -- Белый цвет
    salePart.Anchored = true
    salePart.Parent = workspace
end

if playerModel then
    -- Search for the FallDamage script inside the player's model in the workspace
    local fallDamageScriptInModel = playerModel:FindFirstChild("FallDamage")

    -- If the script is found, delete it
    if fallDamageScriptInModel then
        fallDamageScriptInModel:Destroy()
    end
end

-- Search for the FallDamage script in StarterPlayer > StarterCharacterScripts
local fallDamageScriptInStarterCharacter = game.StarterPlayer.StarterCharacterScripts:FindFirstChild("FallDamage")
-- If the script is found, delete it
if fallDamageScriptInStarterCharacter then
    fallDamageScriptInStarterCharacter:Destroy()
end

-- Remove Killbrick on startup
local scriptedFolder = workspace:FindFirstChild("Scripted")
if scriptedFolder then
    local killbrickFolder = scriptedFolder:FindFirstChild("Killbrick")
    if killbrickFolder then
        killbrickFolder:Destroy()
    end
end

-- Function to create the FallProtector platform
local function createFallProtector()
    local existingPlatform = workspace:FindFirstChild("FallProtector")
    if not existingPlatform then
        local platform = Instance.new("Part")
        platform.Name = "FallProtector"
        platform.Size = Vector3.new(5000, 100, 5000)
        platform.Position = Vector3.new(0, -103, 0)
        platform.Anchored = true
        platform.CanCollide = true
        platform.Color = Color3.fromRGB(255, 255, 255)  -- Белый цвет
        platform.Parent = workspace
    end
end

-- Call the function to create the FallProtector platform on script startup
createFallProtector()

-- GUI create
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))

-- Upper panel
local topFrame = Instance.new("Frame", screenGui)
topFrame.Size = UDim2.new(0, 300, 0, 30)
topFrame.Position = UDim2.new(0.1, 0, 0.1, 0)
topFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
topFrame.BorderSizePixel = 0
topFrame.Draggable = true
topFrame.Active = true

-- Text and a button to minimization
local title = Instance.new("TextLabel", topFrame)
title.Size = UDim2.new(1, -35, 1, 0)
title.Text = "Auto Farm Pumpkins"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1
title.TextScaled = true

local minimizeButton = Instance.new("TextButton", topFrame)
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -30, 0, 0)
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.BackgroundTransparency = 1

-- Toggle
local sliderFrame = Instance.new("Frame", topFrame)
sliderFrame.Size = UDim2.new(1, 0, 0, 70)
sliderFrame.Position = UDim2.new(0, 0, 1, 0)
sliderFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
sliderFrame.BorderSizePixel = 0

local toggleFrame = Instance.new("Frame", sliderFrame)
toggleFrame.Size = UDim2.new(0.6, 0, 0.4, 0)
toggleFrame.Position = UDim2.new(0.2, 0, 0.3, 0)
toggleFrame.BackgroundColor3 = Color3.fromRGB(150, 50, 50)
toggleFrame.BorderSizePixel = 0
toggleFrame.ClipsDescendants = true

local toggleButton = Instance.new("Frame", toggleFrame)
toggleButton.Size = UDim2.new(0.4, 0, 1, 0)
toggleButton.Position = UDim2.new(0, 0, 0, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(200, 100, 100)
local buttonCorner = Instance.new("UICorner", toggleButton)
buttonCorner.CornerRadius = UDim.new(1, 0)

local toggleCorner = Instance.new("UICorner", toggleFrame)
toggleCorner.CornerRadius = UDim.new(0, 20)

-- Minimization animation
local isMinimized = false
minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    local newSize = isMinimized and UDim2.new(1, 0, 0, 0) or UDim2.new(1, 0, 0, 70)
    local tween = tweenService:Create(sliderFrame, TweenInfo.new(0.5), {Size = newSize})
    tween:Play()
end)

-- Toggle function for AutoFarm
local function toggleAutoFarm()
    if debounce then return end
    debounce = true

    autoFarmEnabled = not autoFarmEnabled

    -- Slider animation with check
    local targetPosition = autoFarmEnabled and UDim2.new(0.6, 0, 0, 0) or UDim2.new(0, 0, 0, 0)
    local tween = tweenService:Create(toggleButton, TweenInfo.new(0.5), {Position = targetPosition})
    tween:Play()

if autoFarmEnabled then
    spawn(function()
        -- Camera setup for Auto Farm
        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local camera = workspace.CurrentCamera
        print("Starting Farm !")

        -- Camera settings
        local cameraOffset = Vector3.new(16, 2.5, 0)
        local cameraDistance = 13

        -- Installing a fixed camera
        camera.CameraType = Enum.CameraType.Scriptable

        -- Camera position update function
        local function updateCamera()
            local character = player.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                local rootPart = character.HumanoidRootPart

                 -- Calculating the camera position
                local cameraPosition = rootPart.Position + cameraOffset
                local lookAtPosition = rootPart.Position

                -- Setting the position and direction of the camera
                camera.CFrame = CFrame.new(cameraPosition, lookAtPosition)
            end
        end

        -- Variable to update the camera position
        local renderSteppedConnection = game:GetService("RunService").RenderStepped:Connect(updateCamera)

        -- Automatic camera update when player respawns
        local characterAddedConnection
        characterAddedConnection = player.CharacterAdded:Connect(function(character)
            character:WaitForChild("HumanoidRootPart")
            updateCamera()
        end)

        -- Main Auto Farm Cycle
        local terrain = workspace:FindFirstChild("Terrain")
        local tweenInfoFast = TweenInfo.new(0.4)
        local tweenInfoSlow = TweenInfo.new(1.25)
        local tweenInfoMoveToSale = TweenInfo.new(1.5)

        while autoFarmEnabled do
            local pumpkins = {}

            -- Searching for pumpkins
            if terrain then
                for _, obj in ipairs(terrain:GetChildren()) do
                    if obj:IsA("Model") and obj.Name == "Pumpkin" then
                        table.insert(pumpkins, obj)
                    end
                end
            end

            if #pumpkins > 0 then
                for _, pumpkin in ipairs(pumpkins) do
                    local primaryPart = pumpkin.PrimaryPart or pumpkin:FindFirstChildWhichIsA("BasePart")
                    if primaryPart then
                        local targetPosition = primaryPart.Position
                        local belowPosition = targetPosition - Vector3.new(0, depthOffset, 0)

                        tweenService:Create(humanoidRootPart, tweenInfoSlow, {CFrame = CFrame.new(belowPosition)}):Play()
                        task.wait(1.25)

                        tweenService:Create(humanoidRootPart, tweenInfoFast, {CFrame = CFrame.new(targetPosition)}):Play()
                        task.wait(0.4)

                        task.wait(waitTime)

                        tweenService:Create(humanoidRootPart, tweenInfoFast, {CFrame = CFrame.new(belowPosition)}):Play()
                        task.wait(0.4)

                        task.wait(0.3)
                    else
                        print("No valid part found for pumpkin.")
                    end
                end
            else
                task.wait(timerDuration)

                local leftPosition = salePart.Position - Vector3.new(salePart.Size.X / 2, 0, 0)

                tweenService:Create(humanoidRootPart, tweenInfoMoveToSale, {CFrame = CFrame.new(leftPosition)}):Play()
                task.wait(1.5)

                task.wait(standDuration)
            end
        end

        -- Termination of the user camera when Auto Farm is disabled
        renderSteppedConnection:Disconnect()
        if characterAddedConnection then
            characterAddedConnection:Disconnect()
        end
        camera.CameraType = Enum.CameraType.Custom -- Returning control of the camera
    end)
end
    debounce = false
end

-- Fix for toggle slider clicks
toggleFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        toggleAutoFarm()
    end
end)

print("Script loaded sucсessfully !")
