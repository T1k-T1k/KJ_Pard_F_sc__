local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local runService = game:GetService("RunService")
local tweenService = game:GetService("TweenService")
local autoFarmEnabled = false
local debounce = false

-- GUI create
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))

-- upper panel
local topFrame = Instance.new("Frame", screenGui)
topFrame.Size = UDim2.new(0, 300, 0, 30)
topFrame.Position = UDim2.new(0.1, 0, 0.1, 0)
topFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
topFrame.BorderSizePixel = 0
topFrame.Draggable = true
topFrame.Active = true

-- text and a button to minimization
local title = Instance.new("TextLabel", topFrame)
title.Size = UDim2.new(1, -35, 1, 0)
title.Text = "Auto Farm Pumpkins"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1
title.TextScaled = true

local minimizeButton = Instance.new("TextButton", topFrame)
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -30, 0, 0)
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.BackgroundTransparency = 1

-- toggle
local sliderFrame = Instance.new("Frame", topFrame)
sliderFrame.Size = UDim2.new(1, 0, 0, 70)
sliderFrame.Position = UDim2.new(0, 0, 1, 0)
sliderFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
sliderFrame.BorderSizePixel = 0

local toggleFrame = Instance.new("Frame", sliderFrame)
toggleFrame.Size = UDim2.new(0.6, 0, 0.4, 0)
toggleFrame.Position = UDim2.new(0.2, 0, 0.3, 0)
toggleFrame.BackgroundColor3 = Color3.fromRGB(150, 50, 50)
toggleFrame.BorderSizePixel = 0
toggleFrame.ClipsDescendants = true

local toggleButton = Instance.new("Frame", toggleFrame)
toggleButton.Size = UDim2.new(0.4, 0, 1, 0)
toggleButton.Position = UDim2.new(0, 0, 0, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(200, 100, 100)
local buttonCorner = Instance.new("UICorner", toggleButton)
buttonCorner.CornerRadius = UDim.new(1, 0)

local toggleCorner = Instance.new("UICorner", toggleFrame)
toggleCorner.CornerRadius = UDim.new(0, 20)

-- minimization animation
local isMinimized = false
minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    local newSize = isMinimized and UDim2.new(1, 0, 0, 0) or UDim2.new(1, 0, 0, 70)
    local tween = tweenService:Create(sliderFrame, TweenInfo.new(0.5), {Size = newSize})
    tween:Play()
end)

local function toggleAutoFarm()
    if debounce then return end
    debounce = true

    autoFarmEnabled = not autoFarmEnabled

    -- Анимация ползунка с проверкой
    local targetPosition = autoFarmEnabled and UDim2.new(0.6, 0, 0, 0) or UDim2.new(0, 0, 0, 0)
    local tween = tweenService:Create(toggleButton, TweenInfo.new(0.5), {Position = targetPosition})
    tween:Play()

    print("AutoFarm State Changed:", autoFarmEnabled) -- Проверка состояния автофарма

    if autoFarmEnabled then
        spawn(function()
            while autoFarmEnabled do
                local terrain = workspace:FindFirstChild("Terrain")
                if terrain then
                    local pumpkins = {} -- Массив для хранения тыкв
                    -- Перебираем все объекты в Terrain
                    for _, terrainObject in pairs(terrain:GetChildren()) do
                        if terrainObject:IsA("Model") and terrainObject.Name == "Pumpkin" then
                            local primaryPart = terrainObject:FindFirstChild("PrimaryPart") -- Проверяем наличие PrimaryPart
                            if primaryPart then
                                table.insert(pumpkins, terrainObject)  -- Добавляем тыкву в список
                            end
                        end
                    end

                    -- Если тыквы найдены
                    if #pumpkins > 0 then
                        local targetPumpkin = pumpkins[math.random(1, #pumpkins)]  -- Выбираем случайную тыкву
                        local targetPosition = targetPumpkin.PrimaryPart.Position + Vector3.new(0, 5, 0)  -- Позиция тыквы + смещение по оси Y

                        -- Печать найденной позиции
                        print("Moving to Pumpkin at:", targetPosition)

                        -- Перемещаем персонажа
                        humanoidRootPart.CFrame = CFrame.new(targetPosition)
                    else
                        print("No pumpkins found")
                    end
                end
                wait(0.5)  -- Задержка перед следующим поиском
            end
        end)
    end
    
    debounce = false
end

-- Исправление нажатия на ползунок
toggleFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        print("Toggle clicked")  -- Проверка нажатия на ползунок
        toggleAutoFarm()
    end
end)

-- Проверка готовности персонажа
if humanoidRootPart then
    print("HumanoidRootPart found:", humanoidRootPart)
else
    warn("HumanoidRootPart not found!")
end
